// masukkan token bot mu di sini
var token = 'TOKEN BOT';

// buat objek baru kita kasih nama tg
var tg = new telegram.daftar(token);

// fungsi buat handle hanya menerima pesan berupa POST, kalau GET keluarkan pesan error
function doGet(e) {
  return HtmlService.createHtmlOutput("Hanya data POST yang kita proses yak!");
}

// fungsi buat handle pesan POST
function doPost(e) {

// Memastikan pesan yang diterima hanya dalam format JSON  
  if(e.postData.type == "application/json") {
    
// Kita parsing data yang masuk
    var update = JSON.parse(e.postData.contents);
    
// Jika data pesan update valid, kita proses
    if (update) {
      prosesPesan(update);
    }
  } 
}

// fungsi utama kita buat handle segala pesan
function prosesPesan(update) {
  
// detek klo ada pesan dari user
  if (update.message) { 

// penyederhanaan variable
    var msg = update.message;

// jika user ketik /ping, bot akan jawab Pong!
    if ( /\/ping/i.exec(msg.text) ){
      return tg.kirimPesan(msg.chat.id, '<b>Pong!</b>', 'HTML');
    }

// eh ini saya tambahkan lagi, jika user klik start
    if ( /\/start/i.exec(msg.text) ){
      return tg.kirimPesan(msg.chat.id, "Pesan diterima!\n\nLanjutkan bang..!", 'HTML');
    }

// kalau nanti mau kembangin sendiri menjadi bot interaktif, code nya taruh disini
// atau buatkan fungsi tersendiri saja buat handle nya biar ga bertumpuk panjang
// -- mulai custom text --



     }

}




// Isi dengan web App URL yang di dapat saat deploy
var webAppUrl = "ISI DENGAN WEB APP URL NYA";

function setWebHook() {
  var result = tg.request('setWebhook', {
    url: webAppUrl
  });
  Logger.log(result);
}
